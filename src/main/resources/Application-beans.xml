<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
">

    <bean id="person01" class="club.lylgjiang.spring.beans.pojo.Person">
    </bean>
    
    <!--属性注入-->
    <bean id="person02" class="club.lylgjiang.spring.beans.pojo.Person">
        <property name="name" value="JLC"></property>
        <property name="sax">
            <value>man</value>
        </property>
    </bean>
    
    <!--构造方法注入-->
    <bean id="person03" class="club.lylgjiang.spring.beans.pojo.Person">
        <!--按索引匹配注入-->
        <constructor-arg index="0" value="JLC"></constructor-arg>
        <!--按属性名称注入-->
        <constructor-arg name="sax" value="man"></constructor-arg>
        <!--按类型匹配注入-->
        <constructor-arg type="java.lang.Double">
            <value>5000.0</value>
        </constructor-arg>
    </bean>
    
    <!--若字面值中包含特殊字符，可以使用 <![CDATA[]]> 把字面值包裹起来。-->
    <bean id="person04" class="club.lylgjiang.spring.beans.pojo.Person">
        <property name="name">
            <value><![CDATA[我是<<字面值>>]]></value>
        </property>
    </bean>
    
    <!--通过 <ref> 元素或 ref  属性为 Bean 的属性或构造器参数指定对 Bean 的引用-->
    <bean id="person05" class="club.lylgjiang.spring.beans.pojo.Person">
        <property name="name" value="znc"></property>
        <property name="age" value="20"></property>
        <property name="car" ref="car01"></property>
    </bean>
    
    <!--内部Bean-->
    <bean id="person06" class="club.lylgjiang.spring.beans.pojo.Person">
        <property name="name" value="lx"></property>
        <property name="age" value="20"></property>
        <property name="car">
            <!--内部 Bean 不能使用在任何其他地方-->
            <bean class="club.lylgjiang.spring.beans.pojo.Car">
                <property name="name" value="wuling"></property>
                <property name="company" value="shanghai"></property>
                <property name="price" value="20000"></property>
            </bean>
        </property>
    </bean>
    
    <!--p 命名空间，可以通过 <bean> 元素属性的方式配置 Bean 的属性-->
    <bean id="car01" class="club.lylgjiang.spring.beans.pojo.Car" 
          p:name="fll" 
          p:company="fa" 
          p:price="2000"/>
    
    <!-- <null/> 元素标签-->
    <bean id="person07" class="club.lylgjiang.spring.beans.pojo.Person">
        <property name="name" value="ycg"></property>
        <property name="age" value="22"></property>
        <property name="car">
            <!--可以使用专用的 <null/> 元素标签为 Bean 的字符串或其它对象类型的属性注入 null 值-->
            <null></null>
        </property>
    </bean>
    
    <!--级联属性的配置-->
    <bean id="person08" class="club.lylgjiang.spring.beans.pojo.Person">
        <constructor-arg index="0" value="jlc"></constructor-arg>
        <constructor-arg index="1" ref="car01"></constructor-arg>
        <!--
        TODO:Spring 支持级联属性的配置, 本地不清楚为什么错误
        -->
<!--        <property name="car.name" value="AAAAA"></property>-->
    </bean>
    
    
    <util:properties id="myProperties">
        <prop key="jdbc.driver">com.mysql.jdbc.Driver</prop>
        <prop key="jdbc.user">root</prop>
        <prop key="jdbc.password">root</prop>
        <prop key="dbc.className">jdbc:mysql://localhost:3306/bookstore</prop>
    </util:properties>
    
    <!---->
    <bean id="collections01" class="club.lylgjiang.spring.beans.pojo.Collections">
        <property name="list">
            <list>
                <value>list01</value>
                <value>list02</value>
                <value>list03</value>
            </list>
        </property>
        <property name="set">
            <set>
                <value>set01</value>
                <value>set02</value>
            </set>
        </property>
        <property name="map">
            <map>
                <entry key="key" value-ref="car01">
                </entry>
            </map>
        </property>
        <property name="properties" ref="myProperties"></property>
    </bean>
    
</beans>